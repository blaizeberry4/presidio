trigger:
  - V2

pr:
  branches:
    include:
      - V2

jobs:
    #- job: validate
    #  displayName: 'Validate PR pre-requisites'
    #  steps:
    #    - template: .pipelines/templates/validate-version.yml
    #      parameters:
    #        UPSTREAM_BRANCH: $(System.PullRequest.TargetBranch)

    - job: inclusivelint
      displayName: 'Inclusive linting validation'
      steps:
        - task: Bash@3
          displayName: 'inclusive lint'
          inputs:
            targetType: 'inline'
            script: |
              npm install inclusivelint
              npx inclusivelint -r -p .
    
    - job: SecurityAnalysis
      displayName: Security Analysis
      pool:
          # CredScan only runs on Windows
          vmImage: 'windows-latest'
      steps:
        - template: .pipelines/templates/security-analysis.yml
       
    - job: 'Test'
      dependsOn:
      #- 'validate'
      - 'inclusivelint'
      - 'SecurityAnalysis'
      pool:
        vmImage: 'ubuntu-16.04'
      strategy:
        matrix:
          Python36:
            python.version: '3.6'
          Python37:
            python.version: '3.7'
          Python38:
            python.version: '3.8'

      steps:
        - task: UsePythonVersion@0
          inputs:
            versionSpec: '$(python.version)'
          displayName: 'Use Python $(python.version)'

        - task: Bash@3
          displayName: 'Setup pipenv'
          inputs:
            targetType: 'inline'
            script: |
              set -eux  # fail on error
              python -m pip install --upgrade pip
              python -m pip install pipenv
              pipenv --python 3

        - task: Bash@3
          displayName: 'Install deps: Analyzer'
          inputs:
            targetType: 'inline'
            workingDirectory: 'presidio-analyzer'
            script: |
              set -eux  # fail on error
              pipenv sync --dev --sequential
              pipenv run python -m spacy download en_core_web_lg
        
        - template: .pipelines/templates/build-python.yml
          parameters:
            SERVICE: 'Analyzer'
            WORKING_FOLDER: 'presidio-analyzer'

        - task: Bash@3
          displayName: 'Install deps: Anonymizer'
          inputs:
            targetType: 'inline'
            workingDirectory: 'presidio-anonymizer'
            script: |
              set -eux  # fail on error
              pipenv sync --dev --sequential

        - template: .pipelines/templates/build-python.yml
          parameters:
            SERVICE: 'Anonymizer'
            WORKING_FOLDER: 'presidio-anonymizer'

    - job: FunctionalTests
      pool:
        vmImage: 'ubuntu-16.04'

      steps:
        - task: DockerCompose@0
          displayName: Start Presidio Cluster
          inputs:
            action: Run services
            dockerComposeFile: docker-compose.yml
            buildImages: true

        - task: UsePythonVersion@0
          inputs:
            versionSpec: '3.8'

        - script: |
            python -m venv env
            source env/bin/activate
            python -m pip install --upgrade pip
            pip install -r requirements.txt
            pip install pytest-azurepipelines
          workingDirectory: functional-tests
          displayName: Install requirements

        - script: |
            source env/bin/activate
            pytest
          workingDirectory: functional-tests
          displayName: Run tests
